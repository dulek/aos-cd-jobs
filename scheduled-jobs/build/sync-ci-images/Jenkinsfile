// Monitor all branches of ocp-build-data

@NonCPS
def sortedVersions() {
    return commonlib.ocp4Versions.sort(false)
}

node {



    checkout scm
    def buildlib = load("pipeline-scripts/buildlib.groovy")
    def commonlib = buildlib.commonlib

    properties([
        disableConcurrentBuilds(),
        disableResume(),
        [
            $class: 'ParametersDefinitionProperty',
            parameterDefinitions: [
                string(
                    name: "ONLY_RELEASE",
                    description: "Only run for one version; e.g. 4.7",
                    defaultValue: "",
                    trim: true,
                ),
                [
                    name: 'SKIP_WAITS',
                    description: 'Skip sleeps',
                    $class: 'BooleanParameterDefinition',
                    defaultValue: false
                ],
                [
                    name: 'FORCE_RUN',
                    description: 'Run even if ocp-build-data appears unchanged',
                    $class: 'BooleanParameterDefinition',
                    defaultValue: false
                ],
                commonlib.dryrunParam(),
                commonlib.mockParam(),
            ],
        ]
    ])
        
    if (params.ONLY_RELEASE) {
        for_versions = [ONLY_RELEASE]
    } else {
        for_versions = sortedVersions()
    }

    if (params.FORCE_RUN) {
        currentBuild.displayName += " (forced)"
    }

    for ( String version : for_versions ) {
        group = "openshift-${version}"
        echo "Checking group: ${group}"
        (major, minor) = commonlib.extractMajorMinorVersionNumbers(version)

        sh "rm -rf ${group}"
        sh "git clone https://github.com/openshift/ocp-build-data --branch ${group} --single-branch --depth 1 ${group}"
        dir(group) {
            now_hash = sh(returnStdout: true, script: "git rev-parse HEAD").trim()
        }

        prev_dir_name = "${group}-prev"
        dir(prev_dir_name) {  // if there was a previous, it should be here
            prev_hash = sh(returnStdout: true, script: "git rev-parse HEAD || echo 0").trim()
        }

        echo "Current hash: ${now_hash} "
        echo "Previous hash: ${prev_hash}"

        if (now_hash != prev_hash || params.FORCE_RUN) {
            echo "Changes detected in ocp-build-data group: ${group}"
            currentBuild.displayName += " ${version}"

            doozerWorking = "${env.WORKSPACE}/wd-${version}"
            try{
                sshagent(["openshift-bot"]) {
                    withEnv(['KUBECONFIG=/home/jenkins/kubeconfigs/art-publish.app.ci.kubeconfig']) {
                        sh "rm -rf ${doozerWorking}"
                        sh "${buildlib.DOOZER_BIN} --working-dir ${doozerWorking} --group ${group} images:streams gen-buildconfigs -o ${group}.yaml --apply"
                        sh "oc registry login"
                        sh "${buildlib.DOOZER_BIN} --working-dir ${doozerWorking} --group ${group} images:streams mirror --only-if-missing"
                        sh "${buildlib.DOOZER_BIN} --working-dir ${doozerWorking} --group ${group} images:streams start-builds"

                        if (!params.SKIP_WAITS) {
                            // Allow the builds to run for about 20 minutes
                            sleep time: 20, unit: 'MINUTES'
                        }
                        // Print out status of builds for posterity
                        sh "${buildlib.DOOZER_BIN} --working-dir ${doozerWorking} --group ${group} images:streams check-upstream"
                        withCredentials([string(credentialsId: 'openshift-bot-token', variable: 'GITHUB_TOKEN')]) {
                            if ( (major == 4 && minor >= 6) || major > 4 ) {
                                // Only open PRs on >= 4.6 to leave well enough alone.
                                rc = sh script:"${buildlib.DOOZER_BIN} --working-dir ${doozerWorking} --group ${group} images:streams prs open --add-labels --github-access-token ${GITHUB_TOKEN}", returnStatus: true
                                // rc=25 is used to indicate PR openings were skipped and to try again later.
                                if ( rc != 0 && rc != 25) {
                                    error("Error opening PRs for ${group}: ${rc}")
                                }
                                if ( rc == 25 ) {
                                    // Do not "mv ${group} ${prev_dir_name}" because we are not done
                                    continue
                                }
                            }
                        }
                    }
                }
            } finally {
                commonlib.safeArchiveArtifacts([
                    "wd-${version}/*.log",
                ])
                sh "rm -rf ${doozerWorking}"
            }

            sh "rm -rf ${prev_dir_name}"
            sh "mv ${group} ${prev_dir_name}"
        } else {
            echo "NO changes detected in ocp-build-data group: ${group}"
        }
    }

}
